 /******************************************************************************
 *
 * Module: UltraSonic_sensor
 *
 * File Name: UltraSonic_sensor.c
 *
 * Description: Header file for the AVR UltraSonic_sensor driver
 *
 * Author: Abdelrahman Ali Mohamed
 *
 *******************************************************************************/

#include "UltraSonic_sensor.h"
#include "icu.h"
#include "gpio.h"
#include <util/delay.h>

/*******************************************************************************
 *                              Global Variables                               *
 *******************************************************************************/
uint16  g_edgeCount = 0;
uint16 timer_high_period = 0;

/*
 * Initialization of the ultrasonic_sensor
 * */

void UltraSonic_init(void){
	/*
	 * initialize the icu driver with chosen clock and edge type
	 * clock will be initialized as F_CPU/8
	 * the first edge to detect is the Rising Edge
	 * */
	Icu_ConfigType icu_config = {F_CPU_8,RISING};
	Icu_init(&icu_config);
	/*
	 * Set the call back function of the icu with the ultrasonic_edgeProcessing function
	 * */
	Icu_setCallBack(Ultrasonic_edgeProcessing);
	/**
	 * set the pin direction of the Trigger pin of the ultrasonic sensor as output pin from the MC
	 */
	GPIO_setupPinDirection(PORTB_ID,PIN5_ID,PIN_OUTPUT);

}

/*
 * The call back function called by the Icu driver which is used to calculate
 * the high time ( Pulse time ) generated by the ultrasonic sensor
 * */

void Ultrasonic_edgeProcessing(void){
	g_edgeCount++;
	if(g_edgeCount == 1)
	{
		/*
		 * Clear the timer counter register to start measurements from the
		 * first detected rising edge
		 */
		Icu_clearTimerValue();
		/* Detect falling edge */
		Icu_setEdgeDetectionType(FALLING);
	}
	else if(g_edgeCount == 2)
	{
		/* Store the Period time value + High time value */
		timer_high_period = Icu_getInputCaptureValue();
		/* Clear the timer counter register to start measurements again */
		Icu_clearTimerValue();
		/* Detect rising edge */
		Icu_setEdgeDetectionType(RISING);
		/* clear the global variable counter to start counting from 0 the next time*/
		g_edgeCount = 0;
	}
}

/*
 * function responsible of sending the trigger pulse to the ultrasonic sensor
 * */
void Ultrasonic_Trigger(void){

	/*
	 * set the trigger pin to 1 and make delay for 10 micro_seconds then clear the pin
	 * to send a pulse to the trigger estimated by 10Ms pulse
	 * */
	GPIO_writePin(PORTB_ID,PIN5_ID,LOGIC_HIGH);
	_delay_us(10);
	GPIO_writePin(PORTB_ID,PIN5_ID,LOGIC_LOW);
}

/*
 * function resposbile of sending the trigger pulse by calling the ultrasonic_trigger function
 * start the measurements by the icu from this moment
 * calculate the distance using the timer high period captured by the icu
 * return the distance of the ultrasensor
 * */
uint16 Ultrasonic_readDistance(void){

	uint16 dist = 0;
	Ultrasonic_Trigger();
	dist = timer_high_period/58.8 ;

	return dist;
}


